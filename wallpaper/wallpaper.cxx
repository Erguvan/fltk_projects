// generated by Fast Light User Interface Designer (fluid) version 1.0109

#include "wallpaper.h"
// (c) Robert Shingledecker 2008
#include <iostream>
#include <fstream>
#include <FL/Fl_Color_Chooser.H>
#include <FL/fl_message.H>
#include <stdio.h>
using namespace std;

void imageBrowserCallback(Fl_Widget*, void*) {
  installBtn->activate();
}

void btnCallback(Fl_Widget*, void* userdata) {
  string backgroundType;
string command;

if (userdata == "install")
{
   string selectedImage = imageBrowser->text(imageBrowser->value());
   if (btnScale->value() == 1 )
      backgroundType = "image"; 
   else 
      backgroundType = "tile";                                                                    
   command = "setbackground " + backgroundType + " /opt/backgrounds/" + selectedImage;   
   cout << command << endl << endl;
   system(command.c_str());                                                                                                                                         
   exit(0);
}   
   
if (userdata == "color")
{
   double r,g,b; 
   r = 0.310; g =0.373; b=0.510;
   if (!fl_color_chooser("New Color",r,g,b)) return;
   uchar ru,gu,bu;
   ru = 255*r+.5;
   gu = 255*g+.5;
   bu = 255*b+.5;
   char buffer[10];
   int n = sprintf(buffer,"%02X%02X%02X\n",ru,gu,bu);
   string selectedColor = buffer;
   backgroundType = "solid";                                                  
   command = "setbackground " + backgroundType + " \'#" + selectedColor.substr(0,6) + "\'";
   cout << command << endl << endl;
   system(command.c_str());                                                          
   exit(0);                                                                   
}
                                                                               
if (userdata == "help")
   fl_message("Install images from /opt/backgrounds directory.");
}

Fl_File_Browser *imageBrowser=(Fl_File_Browser *)0;

Fl_Round_Button *btnScale=(Fl_Round_Button *)0;

Fl_Round_Button *btnTile=(Fl_Round_Button *)0;

Fl_Button *installBtn=(Fl_Button *)0;

int main(int argc, char **argv) {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(295, 245);
    w = o;
    { imageBrowser = new Fl_File_Browser(0, 0, 295, 205);
      imageBrowser->type(2);
      imageBrowser->callback((Fl_Callback*)imageBrowserCallback);
      imageBrowser->filter("*.{png,gif,jpg,jpeg}");
      imageBrowser->load("/opt/backgrounds");
    } // Fl_File_Browser* imageBrowser
    { btnScale = new Fl_Round_Button(15, 210, 64, 15, "Scale");
      btnScale->down_box(FL_ROUND_DOWN_BOX);
      btnScale->value(1);
      btnScale->selection_color((Fl_Color)2);
      btnScale->type(FL_RADIO_BUTTON);
    } // Fl_Round_Button* btnScale
    { btnTile = new Fl_Round_Button(15, 225, 64, 15, "Tile");
      btnTile->down_box(FL_ROUND_DOWN_BOX);
      btnTile->selection_color((Fl_Color)2);
      btnTile->type(FL_RADIO_BUTTON);
    } // Fl_Round_Button* btnTile
    { installBtn = new Fl_Button(85, 215, 64, 20, "Install");
      installBtn->callback((Fl_Callback*)btnCallback, (void*)("install"));
      installBtn->deactivate();
    } // Fl_Button* installBtn
    { Fl_Button* o = new Fl_Button(155, 215, 64, 20, "Color");
      o->callback((Fl_Callback*)btnCallback, (void*)("color"));
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(225, 215, 64, 20, "Help");
      o->callback((Fl_Callback*)btnCallback, (void*)("help"));
    } // Fl_Button* o
    o->end();
  } // Fl_Double_Window* o
  w->show(argc, argv);
  return Fl::run();
}
