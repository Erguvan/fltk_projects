# data file for the Fltk User Interface Designer (fluid)
version 1.0109 
header_name {.h} 
code_name {.cxx}
decl {// (c) Robert Shingledecker 2008} {} 

decl {\#include <iostream>} {} 

decl {\#include <FL/Fl_Color_Chooser.H>} {} 

decl {\#include <FL/fl_message.H>} {} 

decl {\#include <stdio.h>} {} 

decl {using namespace std;} {} 

Function {imageBrowserCallback(Fl_Widget*, void*)} {open return_type {static void}
} {
  code {installBtn->activate();} {}
} 

Function {btnCallback(Fl_Widget*, void* userdata)} {open return_type {static void}
} {
  code {string backgroundType;
string command;

if (userdata == "install")
{
   string selectedImage = imageBrowser->text(imageBrowser->value());
//   cout << selectedImage << endl;
   if (btnScale->value() == 1 )
      backgroundType = "image"; 
   else 
      backgroundType = "tile";                                                                    
   command = "awk -f /usr/bin/set_jwm_background.awk -v type=\\"" + backgroundType + "\\" -v value=/opt/.backgrounds/\\"" + selectedImage + "\\" -v outfile=/tmp/.jwmrc.tmp .jwmrc";   
//   cout << command << endl << endl;
   system(command.c_str());                                                                                                                                         
   system("mv /tmp/.jwmrc.tmp .jwmrc; jwm -restart");                                                                                                       
   exit(0);
}   
   
if (userdata == "color")
{
   double r,g,b; 
   r = 0.310; g =0.373; b=0.510;
   if (!fl_color_chooser("New Color",r,g,b)) return;
//   cout << "r=" << r << " g=" << g << " b=" << b <<  endl;
   uchar ru,gu,bu;
   ru = 255*r+.5;
   gu = 255*g+.5;
   bu = 255*b+.5;
//   cout << (int)ru << " " << (int)gu << " " << (int)bu << endl;
   char buffer[10];
   int n = sprintf(buffer,"%02X%02X%02X\\n",ru,gu,bu);
   string selectedColor = buffer;
//   cout << "Hex String: " << selectedColor << endl;
   backgroundType = "solid";                                                  
   command = "awk -f /usr/bin/set_jwm_background.awk -v type=\\"" + backgroundType + "\\" -v value=\\"\#" + selectedColor.substr(0,6) + "\\" -v outfile=/tmp/.jwmrc.tmp .jwmrc";
//   cout << command << endl << endl;
   system(command.c_str());                                                          
   system("mv /tmp/.jwmrc.tmp .jwmrc; jwm -restart");                        
   exit(0);                                                                   
}
                                                                               
if (userdata == "help")
   fl_message("Install images from /opt/.backgrounds directory.");} {selected
  }
} 

Function {} {open
} {
  Fl_Window {} {open
    xywh {131 426 295 245} type Double hide
  } {
    Fl_File_Browser imageBrowser {
      callback imageBrowserCallback
      xywh {0 0 295 205} type Hold
      code0 {imageBrowser->load("/opt/.backgrounds");}
    }
    Fl_Round_Button btnScale {
      label Scale
      xywh {15 210 64 15} down_box ROUND_DOWN_BOX value 1 selection_color 2
      code0 {btnScale->type(FL_RADIO_BUTTON);}
    }
    Fl_Round_Button btnTile {
      label Tile
      xywh {15 225 64 15} down_box ROUND_DOWN_BOX selection_color 2
      code0 {btnTile->type(FL_RADIO_BUTTON);}
    }
    Fl_Button installBtn {
      label Install
      user_data {"install"}
      callback btnCallback
      xywh {85 215 64 20} deactivate
    }
    Fl_Button {} {
      label Color
      user_data {"color"}
      callback btnCallback
      xywh {155 215 64 20}
    }
    Fl_Button {} {
      label Help
      user_data {"help"}
      callback btnCallback
      xywh {225 215 64 20}
    }
  }
} 
