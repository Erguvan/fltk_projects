# data file for the Fltk User Interface Designer (fluid)
version 1.0110 
i18n_type 1 
i18n_include <libintl.h> 
i18n_function mygettext 
header_name {.h} 
code_name {.cxx}
decl {// (c) Robert Shingledecker 2011} {} 

decl {\#include <unistd.h>} {public global
} 

decl {\#include <cstdlib>} {} 

decl {\#include <iostream>} {} 

decl {\#include <fstream>} {} 

decl {\#include <sstream>} {} 

decl {\#include <string>} {} 

decl {\#include <FL/Fl_File_Chooser.H>} {} 

decl {\#include <FL/fl_message.H>} {} 

decl {\#include <locale.h>} {} 

decl {using namespace std;} {} 

decl {istringstream iss;} {} 

decl {string command,msg,heading;} {} 

decl {int results, locales_set=0, test4grub;} {} 

decl {string image,type,installMode, target,dev,format,path,boot,flag;} {} 

Function {cursor_normal()} {return_type void
} {
  code {window->cursor(FL_CURSOR_DEFAULT);
Fl::flush();} {}
} 

Function {cursor_wait()} {return_type void
} {
  code {window->cursor(FL_CURSOR_WAIT);
Fl::flush();} {}
} 

Function {selectFile()} {return_type void
} {
  code {brwTarget->deactivate();
string target = "*" + image + "*";
string title = gettext("Select File for ");
title = title + image;
Fl_File_Chooser chooser("/",target.c_str(), Fl_File_Chooser::SINGLE, title.c_str());
chooser.show();                                             
while(chooser.shown())
  { Fl::wait(); }
  
if ( chooser.value() == NULL )
{
   btnMicro->value(0);
   btnTiny->value(0);
   return;
}
      
path = chooser.value();
Fl::flush();} {}
} 

Function {prepTarget()} {open return_type void
} {
  code {heading = "Select " + type + " for " + image;
brwTarget->label(heading.c_str());

flag = "-p";

if (! image.empty() )
{
    brwTarget->activate();
    command = "fetch_devices " + flag + " > /tmp/install_work";
    system(command.c_str());
    brwTarget->load("/tmp/install_work");
    unlink("/tmp/install_work");
}
grpButtons->deactivate();} {}
} 

Function {mygettext(const char *msgid)} {private return_type {char *}
} {
  code {if (!locales_set) {

setlocale(LC_ALL, "");
bindtextdomain("tinycore","/usr/local/share/locale");
textdomain("tinycore");

locales_set=1;

}

return gettext(msgid);} {}
} 

Function {btnCB(Fl_Widget*, void*userdata)} {open return_type {static void}
} {
  code {const string userdatastr = userdata ? (char *) userdata : "";

if ( userdatastr == "begin" )
{
  wWizard->value(wWizard->child(0));
}  

if ( userdatastr == "next" )
{
  wWizard->next();
  if ( grpFormat->visible() && installMode == "embedded") 
     wWizard->next();
  
}

if ( userdatastr == "prev" )
{
  wWizard->prev();
  if ( grpFormat->visible() && installMode == "embedded") 
     wWizard->prev();

}

if ( userdatastr == "last" )
{
  int last = wWizard->children()-1;
  wWizard->value(wWizard->child(last));
}

if (grpType->visible())
   prepTarget();
   
if (grpBoot->visible())
{
   brwBootRef->load("/usr/share/doc/tc/bootOptions.txt");
}
   
if (grpReview->visible())
{
   boot = options->value();
   brwReview->clear();
   brwReview->add(("Source: "+path).c_str());
   brwReview->add(("Type: "+installMode).c_str());
   brwReview->add(("Target: "+dev).c_str());
   brwReview->add(("Format:"+format).c_str());
   brwReview->add(("Options: "+boot).c_str());
}} {}
} 

Function {btnProceedCB(Fl_Widget*, void* userdata)} {return_type {static void}
} {
  code {btnProceed->deactivate();
grpButtons->deactivate();
cursor_wait();
command="sudo tc-grub4dos.sh "+path+" "+installMode+" "+dev+" "+format+" "+boot;
cout << command << endl;
FILE *pipe = popen(command.c_str(),"r");
char *mbuf = (char *)calloc(PATH_MAX,sizeof(char));
if (pipe)
{
   brwReview->clear();
   while(fgets(mbuf,PATH_MAX,pipe))
   {
      string line(mbuf);
      brwReview->add(line.c_str());
      Fl::flush();
      brwReview->bottomline(brwReview->size());
   }
   pclose(pipe);
   free(mbuf);
}
cursor_normal();
Fl::flush();} {}
} 

Function {} {open
} {
  Fl_Window window {
    label {Tiny Core Grub4dos Installation}
    user_data {"quit"} open
    xywh {87 276 480 400} type Double hide resizable
  } {
    Fl_Wizard wWizard {
      label {Tiny Core Grub4dos Installation} open
      xywh {25 30 435 325} labeltype ENGRAVED_LABEL
      code0 {wWizard->value(wWizard->child(0));}
    } {
      Fl_Group grpType {open
        xywh {25 30 435 325}
      } {
        Fl_Group {} {
          label {Please Select Version to Install} open
          xywh {55 65 375 30} box ENGRAVED_FRAME
        } {
          Fl_Check_Button btnMicro {
            label {Micro Core}
            user_data {"microcore"}
            callback {image = (const char*)v;
selectFile();
fullpathOutput->value(path.c_str());
prepTarget();}
            xywh {80 70 115 25} type Radio down_box DOWN_BOX
          }
          Fl_Check_Button btnTiny {
            label {Tiny Core}
            user_data {"tinycore"}
            callback {image = (const char*)v;
selectFile();
fullpathOutput->value(path.c_str());
prepTarget();}
            xywh {265 70 115 25} type Radio down_box DOWN_BOX
          }
        }
        Fl_Output fullpathOutput {
          xywh {55 98 375 27}
        }
        Fl_Group {} {open
          xywh {110 140 255 25}
        } {
          Fl_Check_Button {} {
            label Frugal
            user_data {"frugal"}
            callback {installMode = (const char*)v;
prepTarget();}
            xywh {115 140 70 21} type Radio down_box DOWN_BOX
            code0 {installMode = "frugal";}
          }
          Fl_Check_Button {} {
            label Embedded
            user_data {"embedded"}
            callback {installMode = (const char*)v;
prepTarget();}
            xywh {230 140 90 21} type Radio down_box DOWN_BOX value 1
            code0 {installMode = "embedded";}
          }
        }
        Fl_Browser brwTarget {
          label {Select Target Disk}
          callback {if ( brwTarget->value() )
{
   dev = brwTarget->text(brwTarget->value());
   int partitionNbr;
   iss.str(dev.substr(3,dev.length()));
   iss >> partitionNbr;
   grpButtons->activate();
}} selected
          xywh {55 190 370 130} type Hold align 1 deactivate
        }
      }
      Fl_Group grpFormat {
        xywh {25 30 435 325} hide
      } {
        Fl_Group FormatType {
          label {Formatting Options}
          xywh {100 95 270 230}
        } {
          Fl_Round_Button {} {
            label {No formatting, use existing.}
            user_data {"none"}
            callback {format = (const char*)v;}
            xywh {140 105 195 20} type Radio down_box ROUND_DOWN_BOX value 1
            code0 {format = "none";}
          }
          Fl_Round_Button {} {
            label ext2
            user_data {"ext2"}
            callback {format = (const char*)v;}
            xywh {140 125 195 20} type Radio down_box ROUND_DOWN_BOX
          }
          Fl_Round_Button {} {
            label ext3
            user_data {"ext3"}
            callback {format = (const char*)v;}
            xywh {140 145 195 20} type Radio down_box ROUND_DOWN_BOX
          }
          Fl_Round_Button {} {
            label ext4
            user_data {"ext4"}
            callback {format = (const char*)v;}
            xywh {140 165 195 20} type Radio down_box ROUND_DOWN_BOX
          }
          Fl_Round_Button {} {
            label vfat
            user_data {"vfat"}
            callback {format = (const char*)v;}
            xywh {140 185 195 20} type Radio down_box ROUND_DOWN_BOX
          }
        }
      }
      Fl_Group grpBoot {
        label {Boot Options}
        xywh {25 30 435 325} hide
      } {
        Fl_Browser brwBootRef {
          label {Boot Options Reference List}
          xywh {35 55 415 250} align 1 textfont 4
        }
        Fl_Input options {
          label {Enter Spaces Separated Options From Examples Above}
          xywh {35 325 415 20} labeltype EMBOSSED_LABEL align 1
        }
      }
      Fl_Group grpReview {
        xywh {25 30 435 325} hide
      } {
        Fl_Browser brwReview {
          label Review
          xywh {45 55 390 245} align 1
        }
        Fl_Button btnProceed {
          label Proceed
          callback btnProceedCB
          xywh {210 315 64 20}
        }
      }
    }
    Fl_Group grpButtons {
      xywh {25 365 440 40} deactivate
    } {
      Fl_Button {} {
        label {@<}
        user_data {"prev"}
        callback btnCB
        xywh {180 365 45 25}
      }
      Fl_Button {} {
        label {@>}
        user_data {"next"}
        callback btnCB
        xywh {230 365 45 25}
      }
      Fl_Button {} {
        label {@<<}
        user_data {"begin"}
        callback btnCB
        xywh {130 365 45 25}
      }
      Fl_Button {} {
        label {@>>}
        user_data {"last"}
        callback btnCB
        xywh {280 365 45 25}
      }
    }
  }
  code {brwTarget->deactivate();
prepTarget();} {}
} 
