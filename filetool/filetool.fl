# data file for the Fltk User Interface Designer (fluid)
version 1.0110 
i18n_type 1 
i18n_include <libintl.h> 
i18n_function gettext 
header_name {.h} 
code_name {.cxx}
decl {// (c) Robert Shingledecker 2008-2010} {} 

decl {\# include <cstdlib>} {} 

decl {\#include <iostream>} {} 

decl {\#include <fstream>} {} 

decl {\#include <string>} {} 

decl {\#include <Fl/fl_ask.H>} {} 

decl {\#include <FL/fl_message.H>} {} 

decl {\#include <locale.h>} {} 

decl {using namespace std;} {} 

decl {string device_name;} {} 

decl {string command = "sudo /usr/bin/filetool.sh ";} {} 

Function {input_callback(Fl_Widget*, void*)} {open return_type {static void}
} {
  code {filetool_choice->activate();
btn_go->activate();} {}
} 

Function {btn_callback(Fl_Widget*, void* userdata)} {open return_type {static void}
} {
  code {device_name = (const char*)input_device->value();
if (device_name.size() == 0)
   return;
   
string action;   
int filetool_action = filetool_choice->value();
switch(filetool_action)
{
   case 0  : action = "none";
             break;
   case 1  : action = "-b";
             break;
   case 2  : action = "-bs";
             break;
   case 3  : action = "-r";
             break;
   default : action = "-b";
}             
   
if (action == "none")
{
   if (fl_ask("This will clear the selected backup device\\nand prevent the backup from occuring."))
   {
      system("> /etc/sysconfig/backup_device");
      exit(0);
   }
   return;
}


window->cursor(FL_CURSOR_WAIT);
Fl::flush();

command += action + " " + device_name;
int results = system(command.c_str());

window->cursor(FL_CURSOR_DEFAULT);            
Fl::flush();

if ( results != 0 )
{
   fl_message("Error.\\nMake sure you are using a valid backup/restore device. Some errors are logged in /tmp/backup_status");
   return;
} else
   exit(0);} {selected
  }
} 

Function {} {open
} {
  code {setlocale(LC_ALL, "");
bindtextdomain("tinycore","/usr/local/share/locale");
textdomain("tinycore");} {}
  Fl_Window window {
    label FileTool open
    xywh {131 421 225 65} type Double hide
  } {
    Fl_Input input_device {
      label {Device:}
      callback input_callback
      xywh {65 7 150 25} when 1
    }
    Fl_Choice filetool_choice {
      label {Action:} open
      xywh {65 40 80 20} down_box BORDER_BOX deactivate
    } {
      MenuItem {} {
        label None
        xywh {0 0 30 20}
      }
      MenuItem {} {
        label Backup
        xywh {0 0 30 20}
      }
      MenuItem {} {
        label Safe
        xywh {0 0 30 20}
      }
      MenuItem {} {
        label Restore
        xywh {0 0 30 20}
      }
    }
    Fl_Button btn_go {
      label GO
      user_data {"go"}
      callback btn_callback
      xywh {150 40 64 20} deactivate
    }
  }
  code {ifstream fin("/etc/sysconfig/backup_device");                                  
getline(fin,device_name);                                        
fin.close();

if (device_name.size() != 0)
{
    input_device->value(device_name.c_str());
    filetool_choice->activate();
    filetool_choice->value(1);
    btn_go->activate();
}} {}
} 
