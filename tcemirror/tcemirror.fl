# data file for the Fltk User Interface Designer (fluid)
version 1.0110 
header_name {.h} 
code_name {.cxx}
decl {// (c) Robert Shingledecker 2008} {} 

decl {\#include <iostream>} {} 

decl {\#include <fstream>} {} 

decl {\#include <FL/fl_message.H>} {} 

decl {using namespace std;} {} 

decl {string url, command;} {} 

Function {btnCallback(Fl_Widget*, void* userdata)} {open return_type {static void}
} {
  code {if (userdata == "cancel" )
   exit(1);
if (userdata == "ok")
{
    url = urlInput->value();
    ofstream fout("/opt/tcemirror", ios::out|ios::out);
    if (! fout.is_open())
    {
       cerr << "Can't open /opt/tcemirror for output!" << endl;
       exit(EXIT_FAILURE);
    }
    fout << url << endl;
    fout.close();
    exit(0);
}} {}
} 

Function {mirrorBrwCallback(Fl_Widget*, void* userdata)} {open return_type {static void}
} {
  code {if (userdata == "select")
{
   string selected = mirrorBrw->text(mirrorBrw->value());
   urlInput->value(selected.c_str());    
}} {}
} 

Function {} {open
} {
  Fl_Window {} {
    label {Select Download Mirror} open
    xywh {29 418 430 135} type Double hide
  } {
    Fl_Input urlInput {
      label {Mirror:}
      xywh {50 6 375 24}
      code0 {urlInput->value("www.tinycorelinux.com/files");}
    }
    Fl_Browser mirrorBrw {
      user_data {"select"}
      callback mirrorBrwCallback
      xywh {50 35 375 70} type Select
    }
    Fl_Button {} {
      label {&OK}
      user_data {"ok"}
      callback btnCallback
      xywh {290 110 64 20}
    }
    Fl_Button {} {
      label {&Cancel}
      user_data {"cancel"}
      callback btnCallback
      xywh {360 110 64 20}
    }
  }
  code {ifstream fin("/opt/tcemirror");
getline(fin,url);
fin.close();
urlInput->value(url.c_str());
command = "busybox wget -cq ftp://distro.ibiblio.org/pub/linux/distributions/tinycorelinux/2.x/tcz/mirrors.lst";
int results = system(command.c_str());
if ( results == 0)
{
   mirrorBrw->load("mirrors.lst");
   system("rm mirrors.lst");
} else
   fl_message("Connection error, check network or ibiblio");} {selected
  }
} 
