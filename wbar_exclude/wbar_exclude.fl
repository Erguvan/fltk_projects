# data file for the Fltk User Interface Designer (fluid)
version 1.0110 
i18n_type 1 
i18n_include <libintl.h> 
i18n_function gettext 
header_name {.h} 
code_name {.cxx}
decl {// (c) Robert Shingledecker 2010} {} 

decl {\#include <iostream>} {} 

decl {\#include <fstream>} {} 

decl {\#include <string>} {} 

decl {\#include <FL/fl_message.H>} {} 

decl {\#include <FL/Fl_File_Chooser.H>} {} 

decl {\#include <locale.h>} {} 

decl {using namespace std;} {} 

decl {string tcedir;} {} 

decl {string command;} {} 

decl {string select_onboot, select_wbar;} {} 

decl {int results;} {} 

decl {string onbootList, wbarList;} {} 

Function {brw_onboot_callback(Fl_Widget *, void *)} {open return_type {static void}
} {
  code {if (brw_onboot->value())
{
   select_onboot = brw_onboot->text(brw_onboot->value());
   bool not_duplicate = true;
   for ( int x=1; x <= brw_wbar->size(); x++ ) {
     if (!strcmp(brw_wbar->text(x),select_onboot.c_str())) {
       not_duplicate = false;
     }
   }   
   if ( not_duplicate )
   {
     command = "echo " + select_onboot + " >> " + wbarList;
     system(command.c_str());
     brw_wbar->load(wbarList.c_str());
   }
}} {}
} 

Function {brw_wbar_callback(Fl_Widget *, void *)} {open return_type {static void}
} {
  code {if (brw_wbar->value())
{
   select_wbar = brw_wbar->text(brw_wbar->value());
   command = "sed -i '/" + select_wbar + "/d' " + wbarList;
   system(command.c_str());
   brw_wbar->load(wbarList.c_str());
}} {}
} 

Function {} {open
} {
  code {setlocale(LC_ALL, "");
bindtextdomain("tinycore","/usr/local/share/locale");
textdomain("tinycore");} {selected
  }
  Fl_Window window {
    label {eXclude Wbar Icons} open
    xywh {17 124 425 350} type Double hide resizable
  } {
    Fl_Browser brw_onboot {
      label {Onboot Items}
      callback brw_onboot_callback
      xywh {5 20 200 325} type Select align 5 textfont 4
    }
    Fl_Browser brw_wbar {
      label {eXclude Wbar Items}
      callback brw_wbar_callback
      xywh {215 20 200 325} type Select align 5 textfont 4
    }
  }
  code {ifstream tcedir_file("/opt/.tce_dir");
getline(tcedir_file,tcedir);
tcedir_file.close();
onbootList = tcedir + "/onboot.lst";
wbarList = tcedir + "/xwbar.lst";
brw_onboot->load(onbootList.c_str());
brw_wbar->load(wbarList.c_str());} {}
} 
